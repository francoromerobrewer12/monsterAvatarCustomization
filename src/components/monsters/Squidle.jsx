/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.11 public/models/Squidle.gltf
*/

import { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

const Squidle = (props) => {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('./models/Squidle.gltf')
  const { actions, names } = useAnimations(animations, group)

  useEffect(() => {
    actions[names[2]].reset().fadeIn(0.5).play()
  },[])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="CharacterArmature">
          <primitive object={nodes.Root} />
          <group name="Squidle002">
            <skinnedMesh name="Cube001" geometry={nodes.Cube001.geometry} material={materials.Squidle_Main} skeleton={nodes.Cube001.skeleton}>
                <meshStandardMaterial color={props.skinColor}/>
            </skinnedMesh>
            <skinnedMesh name="Cube001_1" geometry={nodes.Cube001_1.geometry} material={materials.Squidle_Secondary} skeleton={nodes.Cube001_1.skeleton}>
                <meshStandardMaterial color={props.headDetailColor}/>
            </skinnedMesh>
            <skinnedMesh name="Cube001_2" geometry={nodes.Cube001_2.geometry} material={materials.Tongue} skeleton={nodes.Cube001_2.skeleton} />
            <skinnedMesh name="Cube001_3" geometry={nodes.Cube001_3.geometry} material={materials.Squidle_Horn} skeleton={nodes.Cube001_3.skeleton} />
            <skinnedMesh name="Cube001_4" geometry={nodes.Cube001_4.geometry} material={materials.Eye_Black} skeleton={nodes.Cube001_4.skeleton} />
            <skinnedMesh name="Cube001_5" geometry={nodes.Cube001_5.geometry} material={materials.Eye_White} skeleton={nodes.Cube001_5.skeleton} />
          </group>
        </group>
      </group>
    </group>
  )
}

export default Squidle

useGLTF.preload('./models/Squidle.gltf')
